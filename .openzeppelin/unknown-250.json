{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xA625AB01B08ce023B2a342Dbb12a16f2C8489A8F",
    "txHash": "0xc47ba2e2b657586c52cb2a8099a24460c36de87b752ce6f5b1f5550ce1a93599",
    "deployTransaction": {
      "hash": "0xc47ba2e2b657586c52cb2a8099a24460c36de87b752ce6f5b1f5550ce1a93599",
      "type": 0,
      "accessList": null,
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0xC44f82b07Ab3E691F826951a6E335E1bC1bB0B51",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x54e0193040"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x075da0"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 2,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x470ae3f883de012801dee2ca76ea5814c7e5e6ea3690430fd4bc922d93752fe1",
      "s": "0x6608229fa47b3655d5fc01c6f0021514027e69570ec2262f1a3c6d15b99c3511",
      "v": 535,
      "creates": "0xA625AB01B08ce023B2a342Dbb12a16f2C8489A8F",
      "chainId": 250
    }
  },
  "proxies": [
    {
      "address": "0xCab46f1397fdf4b0F31CEF05345141E51F877EdB",
      "txHash": "0xee8272c05761be8b5da09fc95aa28ddb11bbdb907dadca573f52646b0f4c7128",
      "kind": "transparent"
    },
    {
      "address": "0x5379F32C8D5F663EACb61eeF63F722950294f452",
      "txHash": "0x580f1eafe4418ea14c68bdbf4f5bd1f81644d93a4c2332fc4fd1923f5086c78f",
      "kind": "transparent"
    },
    {
      "address": "0x97116a0f3ee811Bc6d7003Ad10980DD77FB1B50e",
      "txHash": "0x0af0e3c78570adc096816ae871872af475ec188292d3ba062252b8795ff6e0ab",
      "kind": "transparent"
    },
    {
      "address": "0x3Af78AeB766059e2dB89654ed438a8d976CD2dc5",
      "txHash": "0x55db893606c114080d1421d77d2ac0dbb8764561df99d70952e49987ce5c61b7",
      "kind": "transparent"
    },
    {
      "address": "0xca1Cf7C64481B8C095828d380922505E5942C60D",
      "txHash": "0x16e6074286853865b7459f0992f45480b45cf7f040f72a1bf2c3364c76ef3524",
      "kind": "transparent"
    },
    {
      "address": "0xE1D2CA01bc88F325fF7266DD2165944f3CAf0D3D",
      "txHash": "0x87447cf54588db76d3f4ab5b635c966cbe57e117ef40d6d868aa34b82a62a665",
      "kind": "transparent"
    },
    {
      "address": "0xD50aAb6B210fe049B6c5262f5A7676204699AB8E",
      "txHash": "0x0ae8a20ed0f2598713e331840d51208aaa6db4573b6c36906957d774c289a6d2",
      "kind": "transparent"
    },
    {
      "address": "0x65Cc57347bA3761358Eb175540E9e5D39CbceFd8",
      "txHash": "0x34f25d19445373b2521cefe0a40aeb76fe3cc74f2e6e2ecdd250a5e24def3f3c",
      "kind": "transparent"
    },
    {
      "address": "0x07DE1F788Fa7E0C215AA772d4429f47902640ef5",
      "txHash": "0x2f0e88e72918452d51f16b1a681a5fe80949647dd08c88e60c85ec35c800caf6",
      "kind": "transparent"
    },
    {
      "address": "0x311a522e43C035244e72247895F5C17e46CAB000",
      "txHash": "0x9f7d689a0b4af16becbc60027b029e90d43dd3577342a3e5605f8170bb81796c",
      "kind": "transparent"
    },
    {
      "address": "0x540247c00645E85fA548064039493beD4a0c522C",
      "txHash": "0x93ac580fe39f20e5037b630533d4145863a71f3192c236ef5c7e4fbb59376c34",
      "kind": "transparent"
    },
    {
      "address": "0xcE15B0B5B0b150a8364723bE03906a4029104e48",
      "txHash": "0xf824aa7621d271823fcf890e831201d5fa7c44073a5f98483b563807867e6ab8",
      "kind": "transparent"
    },
    {
      "address": "0xc6829dC7Ee6Bd368F917A0EB53FC791790Ba028A",
      "txHash": "0x202af18a4ba06c01ec2d5a88292aa52dd9531365ae1bcb182d75402bfaacc89d",
      "kind": "transparent"
    },
    {
      "address": "0x39CCA7167d8A9FEEB610371d37785Ca78d5e7813",
      "txHash": "0x46950d69409035614127966fd0bcc377e412e71a536bc055a29e48528abfa91b",
      "kind": "transparent"
    },
    {
      "address": "0x291E6fd58bf69b4a0E69405cB093FC2D9ff8D747",
      "txHash": "0x68658740cc17642a53d35f22772fe68e5eb737daf70a9334c413a3be4be4816f",
      "kind": "transparent"
    },
    {
      "address": "0x7F9B660Ef1731BCeE9233Ec4aAdE5631D06DAbd8",
      "txHash": "0x5559a43f8ec025a167335040a0c224d9ed0b3e16bb0d18e8ff9fda7aa1e37616",
      "kind": "transparent"
    },
    {
      "address": "0x1Ee2521224288152614aEEDc50773A979e849f8e",
      "txHash": "0xb80f3bec881d5de0db3a60e45d3f182b433d1f81b86eb978b1ed73d7d01766e3",
      "kind": "transparent"
    },
    {
      "address": "0x90AA2A43743347bDeED0a31B00B6d90400a19270",
      "txHash": "0x11ab199929e8a9867833ca69cd0510ec5bdc1cb0744ddaea3c82f508d5ba076a",
      "kind": "transparent"
    },
    {
      "address": "0x040f79A294188eFd5D687e48C7146CF5564a3Bf1",
      "txHash": "0x1ad0904fc598053cd39e316afa9f9638b18d57d6718e06994737021e1338a7f4",
      "kind": "transparent"
    },
    {
      "address": "0xe97028Cd0b45B33c004419C69Ca8728712D9980B",
      "txHash": "0x9c0e9431c0ae794c8bdc94a42176dffd97de46b3eee87594822ff0e666cfc0b7",
      "kind": "transparent"
    },
    {
      "address": "0xE1749f57881B68fDa9Be56a8d100f58be1fD174d",
      "txHash": "0xa324b7ec2f4cca647658067e08bbadb9b7a65bc13a2e9ca6793198644cc393e2",
      "kind": "transparent"
    },
    {
      "address": "0xFd1AAEAe7e070F5a8F714f75BbD3a26cCF95E3D0",
      "txHash": "0xd219963bfc5682290231b4e6b0e926f77067bc71d16666adcd6038492b96c663",
      "kind": "transparent"
    },
    {
      "address": "0xdD5172934124206e3b7d9c1E3def0E0aAe63062d",
      "txHash": "0xa0c5b17e6467651a13cd647d80a7e49597d5c8e667aa8ae7a15c7e8cc55436eb",
      "kind": "transparent"
    },
    {
      "address": "0x4acde1B972C884eeD88e383A63Ae87913fB70987",
      "txHash": "0x04dac334b8dee67197a6995793601606fecc498f9a25a54992fee4109eca50cc",
      "kind": "transparent"
    },
    {
      "address": "0x3fa0d9A442369292fdb8B493DAa93F631e6bdcf0",
      "txHash": "0xf440ac97a778f2e5cedeae5ee71ceff7cc05542db92a33dac7c23b830a6e713f",
      "kind": "transparent"
    },
    {
      "address": "0xA727C17d82AAD09b8F452CD996c34065C0F19b11",
      "txHash": "0x7cf9fad8d18fdfc8706efed13257fa425af149bdd9eb4655964584068c3e58f2",
      "kind": "transparent"
    },
    {
      "address": "0xE2eD51B0F11c04e5B6dE429c2d5cd4Bb66b93950",
      "txHash": "0x37df1712f154b186e65c26c467595d0db93c5c7fc176b9a040799834a354b583",
      "kind": "transparent"
    },
    {
      "address": "0x08c5cE03eE0AB7e3Bb4070f7AC4a49356cea59A0",
      "txHash": "0x5929773fb4e9cf24833f0a1ac7a3609fe141dabbb62f2221dec62119161bb034",
      "kind": "transparent"
    },
    {
      "address": "0x2CD74164574c220de8366009dB2d421e1C1520Ec",
      "txHash": "0x48a97a3ad93456559411f2d86124e078b4c699baf38b22b80de47d01c57a0a61",
      "kind": "transparent"
    },
    {
      "address": "0x88b8a2C77404165eaD283E2B2fc532e13b8d7101",
      "txHash": "0xd0de4870594f312003ea45f1dc27622ff5ace105af8f95d9db71f06c67bce10e",
      "kind": "transparent"
    },
    {
      "address": "0xc7c025aA69F4b525E3F9f5186b524492ee1C86bB",
      "txHash": "0xd457fd27f05958ceb7439d5689ff30ccde8c3651193cc241cf8fa77105e2be7b",
      "kind": "transparent"
    },
    {
      "address": "0x838B7F64Fa89d322C563A6f904851A13a164f84C",
      "txHash": "0x4c6877556f3a01a2020a7320d040bcf7d4dac27eb90b69529b9395509776f6b6",
      "kind": "transparent"
    },
    {
      "address": "0x7EEAA96bf1aBaA206615046c0991E678a2b12Da1",
      "txHash": "0x5035537a06ca82d4162f140298286267f559db9a9e2f661007063df98695ead1",
      "kind": "transparent"
    },
    {
      "address": "0x95bBd366FaA1D7F29484Cc33Cd5c89905fd29a12",
      "txHash": "0xec1356591c9c28fefa0e75b83882221281f53c06742a3b40516a6b82cb927279",
      "kind": "transparent"
    },
    {
      "address": "0x472Bd78dacF64F5A9262a422829178ec001c9796",
      "txHash": "0x71692163a076801f994979d338808731c840509d7ead038e470242e84031bf3b",
      "kind": "transparent"
    },
    {
      "address": "0xc1018f4Bba361A1Cc60407835e156595e92EF7Ad",
      "txHash": "0x32798935d35670db1c94ac24299836d588a1f550bb8acda28765ab98c4e61dfc",
      "kind": "transparent"
    },
    {
      "address": "0xE986679b06E9D4c72C5B504c86Eb64d546710Aa6",
      "txHash": "0x73e4b5761698a44f605475e72773970a920640aa762e195a6f58af45c29a0770",
      "kind": "transparent"
    },
    {
      "address": "0x62Dd4B5874F6205D12e8b6228116322F32cD3EA5",
      "txHash": "0x3f6ebb6d0601e2251f0a0225739896654f76504777c3c1de4fe9f2c74ec9e3f6",
      "kind": "transparent"
    },
    {
      "address": "0x831332f94C4A0092040b28ECe9377AfEfF34B25a",
      "txHash": "0x6aee2f5f7c51aebd07f978080b85903600b8a15146caa47334757ad075574964",
      "kind": "transparent"
    },
    {
      "address": "0x11288Ceee9C12C9d2b1A80a4Df10d5c18F0429e8",
      "txHash": "0x8c35cddfcc9f3f93c111e3a5db3b91f470c348e049f1c18be91d6bf20b6d81e0",
      "kind": "transparent"
    },
    {
      "address": "0xe9eF08a1eA08e5145547815e496bAE265D4A85Bf",
      "txHash": "0x08fdd93cd84465002c7f00dbad79d54dce2a1982aa216ce076205725a67bb463",
      "kind": "transparent"
    },
    {
      "address": "0xabE59308AC72f04b1a2D04175d5247ba981075a6",
      "txHash": "0x8427faa359c20d330335fa5675ba9b91edb2be4a6edf5234f7fc35e42ca77b5b",
      "kind": "transparent"
    },
    {
      "address": "0x48e38Ed9Ceb25f4394EE204ccaa36ECf2ECc1c5a",
      "txHash": "0x02a7e30c0012374f75248065700c31acb00075c8386a18058df1fd6587d31e1d",
      "kind": "transparent"
    },
    {
      "address": "0xDeD8184CE505983D351b68673E1AE85B417660C4",
      "txHash": "0x10c619fd198bfcc4eb668652606ba2b881dac2c91d734d2753cc29346d7c9d18",
      "kind": "transparent"
    },
    {
      "address": "0x29A7929520ADdC7D3000a81129d4E5Aa7a571f49",
      "txHash": "0x4b1658918f7476d3a4210043c158ad01b746463783932e6574d68f3b095096f8",
      "kind": "transparent"
    },
    {
      "address": "0x5c09e6a2edbCE9EF12fC512168b5BcB1dc8bec94",
      "txHash": "0xb0a23f05f43acb48a7be8743b6685a5d3b5ebebd42854a76354c144e17d84a1e",
      "kind": "transparent"
    },
    {
      "address": "0xFf16996ad66a378856a8034c08bb9C09fF877f78",
      "txHash": "0xf4e1d536f551549c54d9e83ab61475f10963f55b4bdbe981603847cee9297c3e",
      "kind": "transparent"
    },
    {
      "address": "0x1CcA30728F7a82B517Fa174a1163503946054d04",
      "txHash": "0x18233390c8f7d774346c740aaeb368707fa8e687c0240e63440454c0a56c68d0",
      "kind": "transparent"
    },
    {
      "address": "0x26e2f780247C895b466F63e0412c5b449E881c33",
      "txHash": "0x2f3e54fa06a15472c4a2b1e3501448cb84070e29d2c9f8bbcf36b4a21f7859bf",
      "kind": "transparent"
    },
    {
      "address": "0x95f01af7631a106a19a8c68bF25eB54EF416CdE7",
      "txHash": "0x68ad430f7760e82929eda2e6ad26b2ccfbdeeede259f4fb2c36c9e8d2912e60f",
      "kind": "transparent"
    },
    {
      "address": "0xD2D638aa6Ff4694a9147F2C8B09e86F569FA052B",
      "txHash": "0x5324f2370286f5d4d2fcfc8e84d8a1787df1a8a40151cef91107446000775a83",
      "kind": "transparent"
    },
    {
      "address": "0x23ff13d43702cA95a6369736dBFf6Ea718b5F0b0",
      "txHash": "0xebcce0cf2a386d580e14bf81874e0e2ce28b6f84880a0155ac2b4877f97afaf7",
      "kind": "transparent"
    },
    {
      "address": "0xcf8b56F16024Ef0feB3Ddcb85Ec5879bf593E372",
      "txHash": "0x075fd79a9c48f74f3763612629fea6e02b866926dcd6d9809d7a015d7d03e459",
      "kind": "transparent"
    },
    {
      "address": "0x2E7f32e38EA5a5fcb4494d9B626d2d393B176B1E",
      "txHash": "0xe43bc27ba6674e0397003182a5b779fd281a548690585652d0f64153774713e8",
      "kind": "transparent"
    },
    {
      "address": "0x4b0e0D158e6a272295e404A4C06C937d4947093C",
      "txHash": "0xf3ee265e8825f18f1752ceb4aac7337bdff1c43b40255275742677ef2d8e1f09",
      "kind": "transparent"
    },
    {
      "address": "0xF90078c91A3729393A05104eF482EddaB7bfEe1d",
      "txHash": "0x7179c953922829e27cb6cd40dba01fa3f609ac4c8a58eabd326da5871cd8aa90",
      "kind": "transparent"
    },
    {
      "address": "0xB82B93FcF1818513889c0E1F3628484Ce5017A14",
      "txHash": "0xaee436a750a15a887c3f6bb54e9ac4a7d3111f2b578f4be280e1a5157b464b47",
      "kind": "transparent"
    },
    {
      "address": "0x5d167E74e766BD6BCF8E4165aF9272EBEEF47675",
      "txHash": "0xb34da294c47bcc11857748de5754838998c84ca670ac53cae5aa91b448b52dda",
      "kind": "transparent"
    },
    {
      "address": "0x66C293f55f06DC556B961240184902C07d25C1f2",
      "txHash": "0x717aa5e1f20f851c16960627f4183b1b24cb4d8c30d431a68638edf1ab4431f5",
      "kind": "transparent"
    },
    {
      "address": "0x799C102a4014198aD34841F55B1fc4488f791eD6",
      "txHash": "0xe9ca379433afac3efdb56490e40920f075765939f0c762ab2836d3bb6e49ed1a",
      "kind": "transparent"
    },
    {
      "address": "0x871C7dBdE0a3dB46dAa552C83fD79f8Cf76D63FD",
      "txHash": "0x26a406e6015bc1212bbbb1d3125fca8810734f43c30388443b282a8380ab06d4",
      "kind": "transparent"
    },
    {
      "address": "0xE30faE0cFD9E994179e3E63AAbCC239d32E9D6Ed",
      "txHash": "0x193ad0fc06e92dee2ced3f3165db8f8a5c864c626bddc211fddff6ae29b1c2c8",
      "kind": "transparent"
    },
    {
      "address": "0xCeFDB3600F76E7A622994868EC2f72e982860D4A",
      "txHash": "0x8bd0e42b54c55548f0b15c4c6d388d6b8390f3e20da5087fbd6574733030222e",
      "kind": "transparent"
    },
    {
      "address": "0x19f510971FD2c9d1cd6EaEACEC6DC04A3fBA51A6",
      "txHash": "0x7d3f51e1422d17c3a5ef79fe863b2cfc6e0e50b4a7d86a07093a795ce78dd548",
      "kind": "transparent"
    },
    {
      "address": "0x20ACAA67a589e0947E11bA24EDA9D4eAc96f013C",
      "txHash": "0xbf88368c0fd3753f5c8b53a4c221497848cbfb1a43ce946a294f5ec48084200a",
      "kind": "transparent"
    },
    {
      "address": "0x83875cB3B520275183c5c383C8745199293Cd89C",
      "txHash": "0xe847450cfdcb32539bbe0316cd2a299c7b7f5540bd2d19481bd7f162faffc6c2",
      "kind": "transparent"
    },
    {
      "address": "0x46AD1C4F5D7542AeDf57dE7a8Bf0765233A4457f",
      "txHash": "0x50f363a20048736be4d08f268d45262b7f4eb2d7f03cf8c25c429e4cba7547fa",
      "kind": "transparent"
    },
    {
      "address": "0x60dDe8BBE160fe033fACB3446Cf7795cC575B171",
      "txHash": "0x07b2b3646ea7988617d039b0fff3a1599e04a7b3c9af7fd1c8bcc8509537edf7",
      "kind": "transparent"
    },
    {
      "address": "0x4F34511e604a1795E854aEF9D872cb9c9836F1dF",
      "txHash": "0x3bacd4a8904d7ac0ee34697cd675b23d0c3670dfaa279697e6b4572c866424f2",
      "kind": "transparent"
    },
    {
      "address": "0x77d23aFF927f3d46e51D449372c957B3CBBFB40e",
      "txHash": "0x8e2d5e1e9ccfe0b1e23f10d10170564a330ac056ec0d1aa2b59b841fcafefa54",
      "kind": "transparent"
    },
    {
      "address": "0x1F411c4E38dBD59dbA5B5D34924B982a790D14C8",
      "txHash": "0x6428eb82d91b2dbd4c40d1e1e77302096f47312b65c49adcc953beed1aed97b8",
      "kind": "transparent"
    },
    {
      "address": "0x995e502BA378d855925a238606c6df63E471E419",
      "txHash": "0xe6d9c75930fb1b8a67834fa441b31c3c3585a6d4c74a637d2679a12f110e5662",
      "kind": "transparent"
    },
    {
      "address": "0x8551C444B35E41199Ef19Ae6c7289d4472e439C1",
      "txHash": "0xfc39074872736249a0ee54944e15dc44b18a4f07588254021927737da077b319",
      "kind": "transparent"
    },
    {
      "address": "0x5BbD947bb67f3CB55bA7C01A8DB0B21c5d5A4b03",
      "txHash": "0x0d5c165a6f4271f7029f0f50f161578cbf258a0e7da95fbfa35b28974ab59804",
      "kind": "transparent"
    }
  ],
  "impls": {
    "b23cec53865cece70783e1c82f0bdec4088d0a7f10f4c02cb16e62d178d54d60": {
      "address": "0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F",
      "txHash": "0xdfde884addaacc2f7a4c71d01f1642d6bc089fa65d316a6052d0e1eaa658c7f9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "SimplePriceOracle",
            "label": "feeder",
            "type": "t_address",
            "src": "contracts/6/protocol/price-oracle/SimplePriceOracle.sol:28"
          },
          {
            "contract": "SimplePriceOracle",
            "label": "store",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(PriceData)33876_storage))",
            "src": "contracts/6/protocol/price-oracle/SimplePriceOracle.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(PriceData)33876_storage))": {
            "label": "mapping(address => mapping(address => struct SimplePriceOracle.PriceData))"
          },
          "t_mapping(t_address,t_struct(PriceData)33876_storage)": {
            "label": "mapping(address => struct SimplePriceOracle.PriceData)"
          },
          "t_struct(PriceData)33876_storage": {
            "label": "struct SimplePriceOracle.PriceData",
            "members": [
              {
                "label": "price",
                "type": "t_uint192"
              },
              {
                "label": "lastUpdate",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint192": {
            "label": "uint192"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7e3bb24126c1ed5dfb12be3c890b52b8cab0ca0879abedcad9da26066f8af8a6": {
      "address": "0x13C052C34BeAEd5f7C4856fAA4Da0544B9Df99a7",
      "txHash": "0x51457d53984f0ff86d7b340a22741b562be59dafd94d674ea0f6888fdac8a365",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ChainLinkPriceOracle",
            "label": "priceFeeds",
            "type": "t_mapping(t_address,t_mapping(t_address,t_contract(AggregatorV3Interface)45))",
            "src": "contracts/6/protocol/price-oracle/ChainLinkPriceOracle.sol:27"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_address,t_contract(AggregatorV3Interface)45))": {
            "label": "mapping(address => mapping(address => contract AggregatorV3Interface))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_contract(AggregatorV3Interface)45)": {
            "label": "mapping(address => contract AggregatorV3Interface)"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3fe77852d4fa3d86e8bfc4115a60318eab658f28688d744b9394eb12acd696a5": {
      "address": "0xe2880836faf7FaDF094418F9E9DdDe3d132243F1",
      "txHash": "0x3529ad38e103e641ce526adf08874de37d5d637195f037beca64efd98cc7bf06",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "WorkerConfig",
            "label": "oracle",
            "type": "t_contract(PriceOracle)30871",
            "src": "contracts/6/protocol/workers/WorkerConfig.sol:52"
          },
          {
            "contract": "WorkerConfig",
            "label": "workers",
            "type": "t_mapping(t_address,t_struct(Config)50496_storage)",
            "src": "contracts/6/protocol/workers/WorkerConfig.sol:54"
          },
          {
            "contract": "WorkerConfig",
            "label": "governor",
            "type": "t_address",
            "src": "contracts/6/protocol/workers/WorkerConfig.sol:55"
          }
        ],
        "types": {
          "t_contract(PriceOracle)30871": {
            "label": "contract PriceOracle"
          },
          "t_mapping(t_address,t_struct(Config)50496_storage)": {
            "label": "mapping(address => struct WorkerConfig.Config)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Config)50496_storage": {
            "label": "struct WorkerConfig.Config",
            "members": [
              {
                "label": "acceptDebt",
                "type": "t_bool"
              },
              {
                "label": "workFactor",
                "type": "t_uint64"
              },
              {
                "label": "killFactor",
                "type": "t_uint64"
              },
              {
                "label": "maxPriceDiff",
                "type": "t_uint64"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "038b2b61a8caadf8a0483612000bfd4c979e6103f4abdf93218bfaecc5ba59ee": {
      "address": "0x607Ed45D4837e93158CD39aAfd292340Ed5F5D9F",
      "txHash": "0x1db8bea09c90e18557d886a4f5d30c51fdc8ffdc381d8a0f0283475678d364cf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "OracleMedianizer",
            "label": "primarySourceCount",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/6/protocol/OracleMedianizer.sol:26"
          },
          {
            "contract": "OracleMedianizer",
            "label": "primarySources",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_contract(PriceOracle)30871)))",
            "src": "contracts/6/protocol/OracleMedianizer.sol:28"
          },
          {
            "contract": "OracleMedianizer",
            "label": "maxPriceDeviations",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/6/protocol/OracleMedianizer.sol:30"
          },
          {
            "contract": "OracleMedianizer",
            "label": "maxPriceStales",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/6/protocol/OracleMedianizer.sol:32"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_contract(PriceOracle)30871)))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => contract PriceOracle)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_contract(PriceOracle)30871))": {
            "label": "mapping(address => mapping(uint256 => contract PriceOracle))"
          },
          "t_mapping(t_uint256,t_contract(PriceOracle)30871)": {
            "label": "mapping(uint256 => contract PriceOracle)"
          },
          "t_contract(PriceOracle)30871": {
            "label": "contract PriceOracle"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8a48db86fea7efc45ca6a9d10edbd485c2ebd5a7a1fdf21f51757c1204889028": {
      "address": "0x5138133f0671071D8b8F1C4c180881bfCfe22CeC",
      "txHash": "0x5b8d983253e897c669a1caa5d72833b3d3554f4f8038b3a4f55512662b01da1c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "SpookySwapStrategyAddBaseTokenOnly",
            "label": "factory",
            "type": "t_contract(ISwapFactoryLike)31179",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyAddBaseTokenOnly.sol:38"
          },
          {
            "contract": "SpookySwapStrategyAddBaseTokenOnly",
            "label": "router",
            "type": "t_contract(ISwapRouter02Like)31817",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyAddBaseTokenOnly.sol:38"
          },
          {
            "contract": "SpookySwapStrategyAddBaseTokenOnly",
            "label": "okWorkers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyAddBaseTokenOnly.sol:40"
          }
        ],
        "types": {
          "t_contract(ISwapFactoryLike)31179": {
            "label": "contract ISwapFactoryLike"
          },
          "t_contract(ISwapRouter02Like)31817": {
            "label": "contract ISwapRouter02Like"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e486fc1f47df6355b3bf89c26a7fb9148a0d66ff92993fdf3503fb5ced970f95": {
      "address": "0xd7D069493685A581d27824Fc46EdA46B7EfC0063",
      "txHash": "0x48b6da4f6121a1ec01bc034204b2712eb29f9e6aac67b06ddc0146ceb2b393bc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "SpookySwapStrategyLiquidate",
            "label": "factory",
            "type": "t_contract(ISwapFactoryLike)31179",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyLiquidate.sol:39"
          },
          {
            "contract": "SpookySwapStrategyLiquidate",
            "label": "router",
            "type": "t_contract(ISwapRouter02Like)31817",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyLiquidate.sol:39"
          },
          {
            "contract": "SpookySwapStrategyLiquidate",
            "label": "okWorkers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyLiquidate.sol:41"
          }
        ],
        "types": {
          "t_contract(ISwapFactoryLike)31179": {
            "label": "contract ISwapFactoryLike"
          },
          "t_contract(ISwapRouter02Like)31817": {
            "label": "contract ISwapRouter02Like"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e48ad6f5a518a86fc62041516c220969be8dc9c432e9127edb5647176338519e": {
      "address": "0xB318358E68cC071fF10Ff7550604fd0a09D54C12",
      "txHash": "0x526e5ac579b3aafb96491df9226e6e233d24eb4430235fa2ccb9f9893652209e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "SpookySwapStrategyWithdrawMinimizeTrading",
            "label": "factory",
            "type": "t_contract(ISwapFactoryLike)31179",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyWithdrawMinimizeTrading.sol:39"
          },
          {
            "contract": "SpookySwapStrategyWithdrawMinimizeTrading",
            "label": "router",
            "type": "t_contract(ISwapRouter02Like)31817",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyWithdrawMinimizeTrading.sol:40"
          },
          {
            "contract": "SpookySwapStrategyWithdrawMinimizeTrading",
            "label": "wftm",
            "type": "t_address",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyWithdrawMinimizeTrading.sol:42"
          },
          {
            "contract": "SpookySwapStrategyWithdrawMinimizeTrading",
            "label": "wNativeRelayer",
            "type": "t_contract(IWNativeRelayer)32047",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyWithdrawMinimizeTrading.sol:42"
          },
          {
            "contract": "SpookySwapStrategyWithdrawMinimizeTrading",
            "label": "okWorkers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyWithdrawMinimizeTrading.sol:44"
          }
        ],
        "types": {
          "t_contract(ISwapFactoryLike)31179": {
            "label": "contract ISwapFactoryLike"
          },
          "t_contract(ISwapRouter02Like)31817": {
            "label": "contract ISwapRouter02Like"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IWNativeRelayer)32047": {
            "label": "contract IWNativeRelayer"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "23cf038c165bacabfd5483c7127cbf449682e71ee2079a05190978e8fc4e3bab": {
      "address": "0xEDd2b93063E79604dD2C306e0A59dDA15697C4e8",
      "txHash": "0x3cd487fa6855685646c6d6c8cf86f8d19ef0337a09f324c38d274cd932c8804c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "SpookySwapStrategyPartialCloseLiquidate",
            "label": "factory",
            "type": "t_contract(ISwapFactoryLike)31179",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyPartialCloseLiquidate.sol:38"
          },
          {
            "contract": "SpookySwapStrategyPartialCloseLiquidate",
            "label": "router",
            "type": "t_contract(ISwapRouter02Like)31817",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyPartialCloseLiquidate.sol:38"
          },
          {
            "contract": "SpookySwapStrategyPartialCloseLiquidate",
            "label": "okWorkers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyPartialCloseLiquidate.sol:40"
          }
        ],
        "types": {
          "t_contract(ISwapFactoryLike)31179": {
            "label": "contract ISwapFactoryLike"
          },
          "t_contract(ISwapRouter02Like)31817": {
            "label": "contract ISwapRouter02Like"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e845fcb607631fc8efda1a20e035ff738f694127ed5dbece9229ae5a53af9630": {
      "address": "0xd7b805E88c5F52EDE71a9b93F7048c8d632DBEd4",
      "txHash": "0x69e76ad4e098c334ce57b9f15919efaace9bbd90806773e77d171a627f1427e7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "SpookySwapStrategyPartialCloseMinimizeTrading",
            "label": "factory",
            "type": "t_contract(ISwapFactoryLike)31179",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyPartialCloseMinimizeTrading.sol:39"
          },
          {
            "contract": "SpookySwapStrategyPartialCloseMinimizeTrading",
            "label": "router",
            "type": "t_contract(ISwapRouter02Like)31817",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyPartialCloseMinimizeTrading.sol:40"
          },
          {
            "contract": "SpookySwapStrategyPartialCloseMinimizeTrading",
            "label": "wftm",
            "type": "t_address",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyPartialCloseMinimizeTrading.sol:42"
          },
          {
            "contract": "SpookySwapStrategyPartialCloseMinimizeTrading",
            "label": "wNativeRelayer",
            "type": "t_contract(IWNativeRelayer)32047",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyPartialCloseMinimizeTrading.sol:42"
          },
          {
            "contract": "SpookySwapStrategyPartialCloseMinimizeTrading",
            "label": "okWorkers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyPartialCloseMinimizeTrading.sol:44"
          }
        ],
        "types": {
          "t_contract(ISwapFactoryLike)31179": {
            "label": "contract ISwapFactoryLike"
          },
          "t_contract(ISwapRouter02Like)31817": {
            "label": "contract ISwapRouter02Like"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IWNativeRelayer)32047": {
            "label": "contract IWNativeRelayer"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2c188036de46f26a97a502a0ce7172ad2364b69bb675622cc883325b87eb46e2": {
      "address": "0x7C9e73d4C71dae564d41F78d56439bB4ba87592f",
      "txHash": "0xd14c2fcb3e5cf8f19a1fd27252c78506edf6b16dfd76d359566ad586df40dff4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "MiniFL",
            "label": "ALPACA",
            "type": "t_contract(IERC20Upgradeable)306",
            "src": "contracts/8.11/MiniFL/MiniFL.sol:49"
          },
          {
            "contract": "MiniFL",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)1258_storage)dyn_storage",
            "src": "contracts/8.11/MiniFL/MiniFL.sol:49"
          },
          {
            "contract": "MiniFL",
            "label": "stakingToken",
            "type": "t_array(t_contract(IERC20Upgradeable)306)dyn_storage",
            "src": "contracts/8.11/MiniFL/MiniFL.sol:50"
          },
          {
            "contract": "MiniFL",
            "label": "rewarder",
            "type": "t_array(t_contract(IRewarder)2561)dyn_storage",
            "src": "contracts/8.11/MiniFL/MiniFL.sol:51"
          },
          {
            "contract": "MiniFL",
            "label": "isStakingToken",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/8.11/MiniFL/MiniFL.sol:52"
          },
          {
            "contract": "MiniFL",
            "label": "stakeDebtTokenAllowance",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/8.11/MiniFL/MiniFL.sol:52"
          },
          {
            "contract": "MiniFL",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1249_storage))",
            "src": "contracts/8.11/MiniFL/MiniFL.sol:56"
          },
          {
            "contract": "MiniFL",
            "label": "totalAllocPoint",
            "type": "t_uint256",
            "src": "contracts/8.11/MiniFL/MiniFL.sol:58"
          },
          {
            "contract": "MiniFL",
            "label": "alpacaPerSecond",
            "type": "t_uint256",
            "src": "contracts/8.11/MiniFL/MiniFL.sol:58"
          },
          {
            "contract": "MiniFL",
            "label": "maxAlpacaPerSecond",
            "type": "t_uint256",
            "src": "contracts/8.11/MiniFL/MiniFL.sol:61"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)306": {
            "label": "contract IERC20Upgradeable"
          },
          "t_array(t_struct(PoolInfo)1258_storage)dyn_storage": {
            "label": "struct MiniFL.PoolInfo[]"
          },
          "t_struct(PoolInfo)1258_storage": {
            "label": "struct MiniFL.PoolInfo",
            "members": [
              {
                "label": "accAlpacaPerShare",
                "type": "t_uint128"
              },
              {
                "label": "lastRewardTime",
                "type": "t_uint64"
              },
              {
                "label": "allocPoint",
                "type": "t_uint64"
              },
              {
                "label": "isDebtTokenPool",
                "type": "t_bool"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_contract(IERC20Upgradeable)306)dyn_storage": {
            "label": "contract IERC20Upgradeable[]"
          },
          "t_array(t_contract(IRewarder)2561)dyn_storage": {
            "label": "contract IRewarder[]"
          },
          "t_contract(IRewarder)2561": {
            "label": "contract IRewarder"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1249_storage))": {
            "label": "mapping(uint256 => mapping(address => struct MiniFL.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)1249_storage)": {
            "label": "mapping(address => struct MiniFL.UserInfo)"
          },
          "t_struct(UserInfo)1249_storage": {
            "label": "struct MiniFL.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_int256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f087524c9a018de3306fee2c26aeaad0b19c94dc42e1aa74d4acb76eb9f974cf": {
      "address": "0x80F24DD6383E0C944a0F23d8DC18DB0Fa6f4b964",
      "txHash": "0x588a0428bff7db21bc6824b5bf6d358c374941f6749d3c3a18e36aa4b13238b9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "Rewarder1",
            "label": "rewardToken",
            "type": "t_contract(IERC20Upgradeable)306",
            "src": "contracts/8.11/MiniFL/rewarders/Rewarder1.sol:40"
          },
          {
            "contract": "Rewarder1",
            "label": "poolInfo",
            "type": "t_mapping(t_uint256,t_struct(PoolInfo)2613_storage)",
            "src": "contracts/8.11/MiniFL/rewarders/Rewarder1.sol:51"
          },
          {
            "contract": "Rewarder1",
            "label": "poolIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/8.11/MiniFL/rewarders/Rewarder1.sol:53"
          },
          {
            "contract": "Rewarder1",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)2606_storage))",
            "src": "contracts/8.11/MiniFL/rewarders/Rewarder1.sol:54"
          },
          {
            "contract": "Rewarder1",
            "label": "totalAllocPoint",
            "type": "t_uint256",
            "src": "contracts/8.11/MiniFL/rewarders/Rewarder1.sol:56"
          },
          {
            "contract": "Rewarder1",
            "label": "rewardPerSecond",
            "type": "t_uint256",
            "src": "contracts/8.11/MiniFL/rewarders/Rewarder1.sol:56"
          },
          {
            "contract": "Rewarder1",
            "label": "miniFL",
            "type": "t_address",
            "src": "contracts/8.11/MiniFL/rewarders/Rewarder1.sol:61"
          },
          {
            "contract": "Rewarder1",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts/8.11/MiniFL/rewarders/Rewarder1.sol:63"
          },
          {
            "contract": "Rewarder1",
            "label": "maxRewardPerSecond",
            "type": "t_uint256",
            "src": "contracts/8.11/MiniFL/rewarders/Rewarder1.sol:63"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)306": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_uint256,t_struct(PoolInfo)2613_storage)": {
            "label": "mapping(uint256 => struct Rewarder1.PoolInfo)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(PoolInfo)2613_storage": {
            "label": "struct Rewarder1.PoolInfo",
            "members": [
              {
                "label": "accRewardPerShare",
                "type": "t_uint128"
              },
              {
                "label": "lastRewardTime",
                "type": "t_uint64"
              },
              {
                "label": "allocPoint",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)2606_storage))": {
            "label": "mapping(uint256 => mapping(address => struct Rewarder1.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)2606_storage)": {
            "label": "mapping(address => struct Rewarder1.UserInfo)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UserInfo)2606_storage": {
            "label": "struct Rewarder1.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_int256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "88d9101882c2c79d37a5ea07ebaa823d0328ddafaefd920f306aef6bcc1482c7": {
      "address": "0x2431E2E84A4Fc15A2bAb3E1B97D8a9CC9cB848d7",
      "txHash": "0x75a40f5c46a1509fb4d70a9b2d57812c4b44d991d3a29fba096a666bcde89b40",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "minDebtSize",
            "type": "t_uint256",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:46"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "getReservePoolBps",
            "type": "t_uint256",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:48"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "getKillBps",
            "type": "t_uint256",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:50"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "workers",
            "type": "t_mapping(t_address,t_contract(IWorkerConfig)32352)",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:52"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "interestModel",
            "type": "t_contract(InterestModel)32365",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:54"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "getWrappedNativeAddr",
            "type": "t_address",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:56"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "getWNativeRelayer",
            "type": "t_address",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:58"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "getFairLaunchAddr",
            "type": "t_address",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:61"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "maxKillBps",
            "type": "t_uint256",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:63"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "whitelistedCallers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:64"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "getKillTreasuryBps",
            "type": "t_uint256",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:66"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "treasury",
            "type": "t_address",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:69"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "approvedAddStrategies",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:70"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "whitelistedLiquidators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:73"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_contract(IWorkerConfig)32352)": {
            "label": "mapping(address => contract IWorkerConfig)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IWorkerConfig)32352": {
            "label": "contract IWorkerConfig"
          },
          "t_contract(InterestModel)32365": {
            "label": "contract InterestModel"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5c9bc885c81d307817c13349e92180112226688296e909b8f712731f5d574e2a": {
      "address": "0x849B7840d9ec233573Bc03A04185b6275dA96E81",
      "txHash": "0xe50a0329dd3fd98cb124966233c8ee428761c4fd2d35d4406e87735576eb2803",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "DebtToken",
            "label": "timelock",
            "type": "t_address",
            "src": "contracts/6/protocol/DebtToken.sol:28"
          },
          {
            "contract": "DebtToken",
            "label": "okHolders",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/6/protocol/DebtToken.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "37d5545254a7ab729b54e2f28ce2b3e33dc77beb6399216ff4cbee2196448add": {
      "address": "0xc72EEBeFd7670DfEa108Dcf6e80616900CF3AeD6",
      "txHash": "0xe42dbdbae27b6c65abb1b3f26a4bd1d17a355fc53c0e0fa6f4a7d5d326f59360",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Vault",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:62"
          },
          {
            "contract": "Vault",
            "label": "POSITION_ID",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:64"
          },
          {
            "contract": "Vault",
            "label": "STRATEGY",
            "type": "t_address",
            "src": "contracts/6/protocol/Vault.sol:65"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_address",
            "src": "contracts/6/protocol/Vault.sol:73"
          },
          {
            "contract": "Vault",
            "label": "debtToken",
            "type": "t_address",
            "src": "contracts/6/protocol/Vault.sol:75"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IVaultConfig)31999",
            "src": "contracts/6/protocol/Vault.sol:80"
          },
          {
            "contract": "Vault",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)6521_storage)",
            "src": "contracts/6/protocol/Vault.sol:81"
          },
          {
            "contract": "Vault",
            "label": "nextPositionID",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:84"
          },
          {
            "contract": "Vault",
            "label": "fairLaunchPoolId",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:85"
          },
          {
            "contract": "Vault",
            "label": "vaultDebtShare",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:86"
          },
          {
            "contract": "Vault",
            "label": "vaultDebtVal",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:87"
          },
          {
            "contract": "Vault",
            "label": "lastAccrueTime",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:89"
          },
          {
            "contract": "Vault",
            "label": "reservePool",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:89"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVaultConfig)31999": {
            "label": "contract IVaultConfig"
          },
          "t_mapping(t_uint256,t_struct(Position)6521_storage)": {
            "label": "mapping(uint256 => struct Vault.Position)"
          },
          "t_struct(Position)6521_storage": {
            "label": "struct Vault.Position",
            "members": [
              {
                "label": "worker",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "debtShare",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fd58014e012a37f73c68389ba504c603171a80d748997c6846ae3cbaccaf0b13": {
      "address": "0xAFf8339daEcaFd5116cBe54d33C5aab123148C5B",
      "txHash": "0x4c1d2b811d6965b47cab7823dd1f4dbb2278ed958c8ee5a2b5e04dfecfc06a4a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "SpookySwapStrategyAddTwoSidesOptimal",
            "label": "factory",
            "type": "t_contract(ISwapFactoryLike)31179",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyAddTwoSidesOptimal.sol:40"
          },
          {
            "contract": "SpookySwapStrategyAddTwoSidesOptimal",
            "label": "router",
            "type": "t_contract(ISwapRouter02Like)31817",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyAddTwoSidesOptimal.sol:42"
          },
          {
            "contract": "SpookySwapStrategyAddTwoSidesOptimal",
            "label": "vault",
            "type": "t_contract(IVault)31852",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyAddTwoSidesOptimal.sol:44"
          },
          {
            "contract": "SpookySwapStrategyAddTwoSidesOptimal",
            "label": "okWorkers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyAddTwoSidesOptimal.sol:44"
          }
        ],
        "types": {
          "t_contract(ISwapFactoryLike)31179": {
            "label": "contract ISwapFactoryLike"
          },
          "t_contract(ISwapRouter02Like)31817": {
            "label": "contract ISwapRouter02Like"
          },
          "t_contract(IVault)31852": {
            "label": "contract IVault"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f355d60178c73409d93ce484699bc7a6d6d7cbfe521504044ffd90e71aa96977": {
      "address": "0x0B92193a330e58a986480E452bc24918eFfB5b8d",
      "txHash": "0x38db6134e623493ce73f5ffbc3746cbb96588dc4118fee9813539bb0802bd635",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "SpookyWorker03",
            "label": "spookyMasterChef",
            "type": "t_contract(ISpookyMasterChef)30924",
            "src": "contracts/6/protocol/workers/spookyswap/SpookyWorker03.sol:65"
          },
          {
            "contract": "SpookyWorker03",
            "label": "factory",
            "type": "t_contract(ISwapFactoryLike)31179",
            "src": "contracts/6/protocol/workers/spookyswap/SpookyWorker03.sol:67"
          },
          {
            "contract": "SpookyWorker03",
            "label": "router",
            "type": "t_contract(ISwapRouter02Like)31817",
            "src": "contracts/6/protocol/workers/spookyswap/SpookyWorker03.sol:67"
          },
          {
            "contract": "SpookyWorker03",
            "label": "lpToken",
            "type": "t_contract(ISwapPairLike)31421",
            "src": "contracts/6/protocol/workers/spookyswap/SpookyWorker03.sol:69"
          },
          {
            "contract": "SpookyWorker03",
            "label": "wNative",
            "type": "t_address",
            "src": "contracts/6/protocol/workers/spookyswap/SpookyWorker03.sol:70"
          },
          {
            "contract": "SpookyWorker03",
            "label": "baseToken",
            "type": "t_address",
            "src": "contracts/6/protocol/workers/spookyswap/SpookyWorker03.sol:70"
          },
          {
            "contract": "SpookyWorker03",
            "label": "farmingToken",
            "type": "t_address",
            "src": "contracts/6/protocol/workers/spookyswap/SpookyWorker03.sol:72"
          },
          {
            "contract": "SpookyWorker03",
            "label": "boo",
            "type": "t_address",
            "src": "contracts/6/protocol/workers/spookyswap/SpookyWorker03.sol:75"
          },
          {
            "contract": "SpookyWorker03",
            "label": "operator",
            "type": "t_address",
            "src": "contracts/6/protocol/workers/spookyswap/SpookyWorker03.sol:75"
          },
          {
            "contract": "SpookyWorker03",
            "label": "pid",
            "type": "t_uint256",
            "src": "contracts/6/protocol/workers/spookyswap/SpookyWorker03.sol:76"
          },
          {
            "contract": "SpookyWorker03",
            "label": "shares",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/6/protocol/workers/spookyswap/SpookyWorker03.sol:78"
          },
          {
            "contract": "SpookyWorker03",
            "label": "okStrats",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/6/protocol/workers/spookyswap/SpookyWorker03.sol:79"
          },
          {
            "contract": "SpookyWorker03",
            "label": "totalShare",
            "type": "t_uint256",
            "src": "contracts/6/protocol/workers/spookyswap/SpookyWorker03.sol:81"
          },
          {
            "contract": "SpookyWorker03",
            "label": "addStrat",
            "type": "t_contract(IStrategy)30937",
            "src": "contracts/6/protocol/workers/spookyswap/SpookyWorker03.sol:82"
          },
          {
            "contract": "SpookyWorker03",
            "label": "liqStrat",
            "type": "t_contract(IStrategy)30937",
            "src": "contracts/6/protocol/workers/spookyswap/SpookyWorker03.sol:83"
          },
          {
            "contract": "SpookyWorker03",
            "label": "reinvestBountyBps",
            "type": "t_uint256",
            "src": "contracts/6/protocol/workers/spookyswap/SpookyWorker03.sol:83"
          },
          {
            "contract": "SpookyWorker03",
            "label": "maxReinvestBountyBps",
            "type": "t_uint256",
            "src": "contracts/6/protocol/workers/spookyswap/SpookyWorker03.sol:84"
          },
          {
            "contract": "SpookyWorker03",
            "label": "okReinvestors",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/6/protocol/workers/spookyswap/SpookyWorker03.sol:86"
          },
          {
            "contract": "SpookyWorker03",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/6/protocol/workers/spookyswap/SpookyWorker03.sol:88"
          },
          {
            "contract": "SpookyWorker03",
            "label": "feeDenom",
            "type": "t_uint256",
            "src": "contracts/6/protocol/workers/spookyswap/SpookyWorker03.sol:89"
          },
          {
            "contract": "SpookyWorker03",
            "label": "reinvestThreshold",
            "type": "t_uint256",
            "src": "contracts/6/protocol/workers/spookyswap/SpookyWorker03.sol:90"
          },
          {
            "contract": "SpookyWorker03",
            "label": "reinvestPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/6/protocol/workers/spookyswap/SpookyWorker03.sol:91"
          },
          {
            "contract": "SpookyWorker03",
            "label": "treasuryAccount",
            "type": "t_address",
            "src": "contracts/6/protocol/workers/spookyswap/SpookyWorker03.sol:92"
          },
          {
            "contract": "SpookyWorker03",
            "label": "treasuryBountyBps",
            "type": "t_uint256",
            "src": "contracts/6/protocol/workers/spookyswap/SpookyWorker03.sol:93"
          },
          {
            "contract": "SpookyWorker03",
            "label": "beneficialVault",
            "type": "t_contract(IVault)31852",
            "src": "contracts/6/protocol/workers/spookyswap/SpookyWorker03.sol:93"
          },
          {
            "contract": "SpookyWorker03",
            "label": "beneficialVaultBountyBps",
            "type": "t_uint256",
            "src": "contracts/6/protocol/workers/spookyswap/SpookyWorker03.sol:94"
          },
          {
            "contract": "SpookyWorker03",
            "label": "rewardPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/6/protocol/workers/spookyswap/SpookyWorker03.sol:97"
          },
          {
            "contract": "SpookyWorker03",
            "label": "buybackAmount",
            "type": "t_uint256",
            "src": "contracts/6/protocol/workers/spookyswap/SpookyWorker03.sol:98"
          }
        ],
        "types": {
          "t_contract(ISpookyMasterChef)30924": {
            "label": "contract ISpookyMasterChef"
          },
          "t_contract(ISwapFactoryLike)31179": {
            "label": "contract ISwapFactoryLike"
          },
          "t_contract(ISwapRouter02Like)31817": {
            "label": "contract ISwapRouter02Like"
          },
          "t_contract(ISwapPairLike)31421": {
            "label": "contract ISwapPairLike"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IStrategy)30937": {
            "label": "contract IStrategy"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IVault)31852": {
            "label": "contract IVault"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "97f736e00ac5563ed5416010f4290849affff92f1e16f6abe7f8419a7be399dd": {
      "address": "0xebE06F7370973ABE2BF051f14DBF5F5FaF2cc544",
      "txHash": "0xa06394833a0653ef4b5e78776d907a31c70107e4184e7d41abff89b9211b3fec",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "WorkerConfig",
            "label": "oracle",
            "type": "t_contract(PriceOracle)30921",
            "src": "contracts/6/protocol/workers/WorkerConfig.sol:54"
          },
          {
            "contract": "WorkerConfig",
            "label": "workers",
            "type": "t_mapping(t_address,t_struct(Config)50547_storage)",
            "src": "contracts/6/protocol/workers/WorkerConfig.sol:56"
          },
          {
            "contract": "WorkerConfig",
            "label": "governor",
            "type": "t_address",
            "src": "contracts/6/protocol/workers/WorkerConfig.sol:57"
          }
        ],
        "types": {
          "t_contract(PriceOracle)30921": {
            "label": "contract PriceOracle"
          },
          "t_mapping(t_address,t_struct(Config)50547_storage)": {
            "label": "mapping(address => struct WorkerConfig.Config)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Config)50547_storage": {
            "label": "struct WorkerConfig.Config",
            "members": [
              {
                "label": "acceptDebt",
                "type": "t_bool"
              },
              {
                "label": "workFactor",
                "type": "t_uint64"
              },
              {
                "label": "killFactor",
                "type": "t_uint64"
              },
              {
                "label": "maxPriceDiff",
                "type": "t_uint64"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9bad19cac5632e9f86c94e65b7282be32f84235f1a04329fa3b728a3cd5a4923": {
      "address": "0x4d1d1F07C4cD6603733414DbCdA76F7DDb4bccf7",
      "txHash": "0x3b9a391f56988104c4b851c61b903dae2f1cbc37938757e2c55e4025a79232c2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Vault",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:62"
          },
          {
            "contract": "Vault",
            "label": "POSITION_ID",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:64"
          },
          {
            "contract": "Vault",
            "label": "STRATEGY",
            "type": "t_address",
            "src": "contracts/6/protocol/Vault.sol:65"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_address",
            "src": "contracts/6/protocol/Vault.sol:73"
          },
          {
            "contract": "Vault",
            "label": "debtToken",
            "type": "t_address",
            "src": "contracts/6/protocol/Vault.sol:75"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IVaultConfig)32049",
            "src": "contracts/6/protocol/Vault.sol:80"
          },
          {
            "contract": "Vault",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)6539_storage)",
            "src": "contracts/6/protocol/Vault.sol:81"
          },
          {
            "contract": "Vault",
            "label": "nextPositionID",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:84"
          },
          {
            "contract": "Vault",
            "label": "fairLaunchPoolId",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:85"
          },
          {
            "contract": "Vault",
            "label": "vaultDebtShare",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:86"
          },
          {
            "contract": "Vault",
            "label": "vaultDebtVal",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:87"
          },
          {
            "contract": "Vault",
            "label": "lastAccrueTime",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:89"
          },
          {
            "contract": "Vault",
            "label": "reservePool",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:89"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVaultConfig)32049": {
            "label": "contract IVaultConfig"
          },
          "t_mapping(t_uint256,t_struct(Position)6539_storage)": {
            "label": "mapping(uint256 => struct Vault.Position)"
          },
          "t_struct(Position)6539_storage": {
            "label": "struct Vault.Position",
            "members": [
              {
                "label": "worker",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "debtShare",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6055df225deaba0cdc2bff8a6a01d0e520ad941969fa610c61e8415b305551ef": {
      "address": "0x78e1A5F7580795269f6865f70DF5Fce852C70876",
      "txHash": "0x73cb1e670c2a3f4bfd7e21a5e25bc05f3f64bc9343d2dff13bac7aed98eb2e44",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "DebtToken",
            "label": "timelock",
            "type": "t_address",
            "src": "contracts/6/protocol/DebtToken.sol:28"
          },
          {
            "contract": "DebtToken",
            "label": "okHolders",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/6/protocol/DebtToken.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a39c559446c46b2c0f3d2c83ad4372d3c4f7b5390b9390452c46ef44f465bed6": {
      "address": "0x4701B805E8D857E256a1E7c4D5910625C46Db933",
      "txHash": "0x893134884415e7ccbbbdb7d53eb76e06a255920016521611a5ab1419ce5acc34",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "DebtToken",
            "label": "timelock",
            "type": "t_address",
            "src": "contracts/6/protocol/DebtToken.sol:28"
          },
          {
            "contract": "DebtToken",
            "label": "okHolders",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/6/protocol/DebtToken.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5ec3b085fd7a5db7058ec97d26f97aca4b9924b2aa1f35b60a7cab850984f945": {
      "address": "0x4C38414870696157C6a143Ad02C4efc2509D9C15",
      "txHash": "0x697e67af19e827016c8fd9875effdbb8bba9b8f7c551dfb71f610443acee1146",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Vault",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:62"
          },
          {
            "contract": "Vault",
            "label": "POSITION_ID",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:64"
          },
          {
            "contract": "Vault",
            "label": "STRATEGY",
            "type": "t_address",
            "src": "contracts/6/protocol/Vault.sol:65"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_address",
            "src": "contracts/6/protocol/Vault.sol:73"
          },
          {
            "contract": "Vault",
            "label": "debtToken",
            "type": "t_address",
            "src": "contracts/6/protocol/Vault.sol:75"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IVaultConfig)32025",
            "src": "contracts/6/protocol/Vault.sol:80"
          },
          {
            "contract": "Vault",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)6527_storage)",
            "src": "contracts/6/protocol/Vault.sol:81"
          },
          {
            "contract": "Vault",
            "label": "nextPositionID",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:84"
          },
          {
            "contract": "Vault",
            "label": "fairLaunchPoolId",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:85"
          },
          {
            "contract": "Vault",
            "label": "vaultDebtShare",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:86"
          },
          {
            "contract": "Vault",
            "label": "vaultDebtVal",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:87"
          },
          {
            "contract": "Vault",
            "label": "lastAccrueTime",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:89"
          },
          {
            "contract": "Vault",
            "label": "reservePool",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:89"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVaultConfig)32025": {
            "label": "contract IVaultConfig"
          },
          "t_mapping(t_uint256,t_struct(Position)6527_storage)": {
            "label": "mapping(uint256 => struct Vault.Position)"
          },
          "t_struct(Position)6527_storage": {
            "label": "struct Vault.Position",
            "members": [
              {
                "label": "worker",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "debtShare",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ed323cdfc6250beaddce04f278bea475a5b70f81cf3238f143487d636e148a4b": {
      "address": "0xD6060e89C81f1AE49DCE5283C407ff8F36e6f5f9",
      "txHash": "0x07764e8c38ab5d74467a20d170e47afbd2d53474e0da93b1818f6f7a8a5af82f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "DebtToken",
            "label": "timelock",
            "type": "t_address",
            "src": "contracts/6/protocol/DebtToken.sol:28"
          },
          {
            "contract": "DebtToken",
            "label": "okHolders",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/6/protocol/DebtToken.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a41231373ad935beb3643626510df77a0670753967956afba68f5c15ea49477a": {
      "address": "0x7aE2f82b502293FAeA3b7108b477e54BC9bAeC93",
      "txHash": "0x693a9d7fb997c528414b8ea446845bc3fc5cc8647749dd648aee48446b6bbff2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ChainlinkPriceOracle2",
            "label": "priceFeeds",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_contract(AggregatorV3Interface)45)))",
            "src": "contracts/8.11/protocol/price-oracle/ChainlinkPriceOracle2.sol:39"
          },
          {
            "contract": "ChainlinkPriceOracle2",
            "label": "priceFeedCount",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/8.11/protocol/price-oracle/ChainlinkPriceOracle2.sol:40"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_contract(AggregatorV3Interface)45)))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => contract AggregatorV3Interface)))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_contract(AggregatorV3Interface)45))": {
            "label": "mapping(address => mapping(uint256 => contract AggregatorV3Interface))"
          },
          "t_mapping(t_uint256,t_contract(AggregatorV3Interface)45)": {
            "label": "mapping(uint256 => contract AggregatorV3Interface)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "47de08f8bdc355ca7070cc337c720ee364b3bdf1314f311ea00a7107780f031d": {
      "address": "0x05bDF33f03017eaFdEEccD68406E1281a1deF62d",
      "txHash": "0x03cb40394e2526a3ab1f326e38cfba75779eb69ad4a98d98daed313f93187164",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ChainlinkPriceOracle2",
            "label": "priceFeeds",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_contract(AggregatorV3Interface)45)))",
            "src": "contracts/8.11/protocol/price-oracle/ChainlinkPriceOracle2.sol:37"
          },
          {
            "contract": "ChainlinkPriceOracle2",
            "label": "priceFeedCount",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/8.11/protocol/price-oracle/ChainlinkPriceOracle2.sol:38"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_contract(AggregatorV3Interface)45)))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => contract AggregatorV3Interface)))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_contract(AggregatorV3Interface)45))": {
            "label": "mapping(address => mapping(uint256 => contract AggregatorV3Interface))"
          },
          "t_mapping(t_uint256,t_contract(AggregatorV3Interface)45)": {
            "label": "mapping(uint256 => contract AggregatorV3Interface)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "97b9b930d5ba449e1486815091e31eb99787b692a899389e9f0d5263c82c05a2": {
      "address": "0x6bAd8beBae6F4920A05a1564cE25a148aC7A07EB",
      "txHash": "0x259f583896f273344875be613952d2fedcaa4204370196b43e541706145ba0b2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Vault",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:62"
          },
          {
            "contract": "Vault",
            "label": "POSITION_ID",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:64"
          },
          {
            "contract": "Vault",
            "label": "STRATEGY",
            "type": "t_address",
            "src": "contracts/6/protocol/Vault.sol:65"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_address",
            "src": "contracts/6/protocol/Vault.sol:73"
          },
          {
            "contract": "Vault",
            "label": "debtToken",
            "type": "t_address",
            "src": "contracts/6/protocol/Vault.sol:75"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IVaultConfig)31749",
            "src": "contracts/6/protocol/Vault.sol:80"
          },
          {
            "contract": "Vault",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)5781_storage)",
            "src": "contracts/6/protocol/Vault.sol:81"
          },
          {
            "contract": "Vault",
            "label": "nextPositionID",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:84"
          },
          {
            "contract": "Vault",
            "label": "fairLaunchPoolId",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:85"
          },
          {
            "contract": "Vault",
            "label": "vaultDebtShare",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:86"
          },
          {
            "contract": "Vault",
            "label": "vaultDebtVal",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:87"
          },
          {
            "contract": "Vault",
            "label": "lastAccrueTime",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:89"
          },
          {
            "contract": "Vault",
            "label": "reservePool",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:89"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVaultConfig)31749": {
            "label": "contract IVaultConfig"
          },
          "t_mapping(t_uint256,t_struct(Position)5781_storage)": {
            "label": "mapping(uint256 => struct Vault.Position)"
          },
          "t_struct(Position)5781_storage": {
            "label": "struct Vault.Position",
            "members": [
              {
                "label": "worker",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "debtShare",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "477f8061607eec81d2f84661bdcbf3d51881d6456ecaf98d454c7b809cbfa691": {
      "address": "0xDdCF0F1f320A82a93eA6f8F8Ae3ED3f8Eaf5F95E",
      "txHash": "0xb62b4bb353a22851291b52d8f7e1ed6ec535e4a506cbe13aa4cc8f221e34456a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "SpookySwapStrategyAddTwoSidesOptimal",
            "label": "factory",
            "type": "t_contract(ISwapFactoryLike)30874",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyAddTwoSidesOptimal.sol:40"
          },
          {
            "contract": "SpookySwapStrategyAddTwoSidesOptimal",
            "label": "router",
            "type": "t_contract(ISwapRouter02Like)31512",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyAddTwoSidesOptimal.sol:42"
          },
          {
            "contract": "SpookySwapStrategyAddTwoSidesOptimal",
            "label": "vault",
            "type": "t_contract(IVault)31602",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyAddTwoSidesOptimal.sol:44"
          },
          {
            "contract": "SpookySwapStrategyAddTwoSidesOptimal",
            "label": "okWorkers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyAddTwoSidesOptimal.sol:44"
          }
        ],
        "types": {
          "t_contract(ISwapFactoryLike)30874": {
            "label": "contract ISwapFactoryLike"
          },
          "t_contract(ISwapRouter02Like)31512": {
            "label": "contract ISwapRouter02Like"
          },
          "t_contract(IVault)31602": {
            "label": "contract IVault"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "910467a551e11216fd330e3a4fe4f9d9b4b3c354e355f69d86669244f03f064f": {
      "address": "0x816134bD5388e3634D36eBd67208E09b0b063d87",
      "txHash": "0xe789b804b7998102ee95c0fc72a8dc72f08e1c02cdf6a1eefd9a532349d1bc13",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "TombWorker03",
            "label": "tshareRewardPool",
            "type": "t_contract(ITShareRewardPool)31567",
            "src": "contracts/6/protocol/workers/tomb/TombWorker03.sol:68"
          },
          {
            "contract": "TombWorker03",
            "label": "factory",
            "type": "t_contract(ISwapFactoryLike)30874",
            "src": "contracts/6/protocol/workers/tomb/TombWorker03.sol:70"
          },
          {
            "contract": "TombWorker03",
            "label": "router",
            "type": "t_contract(ISwapRouter02Like)31512",
            "src": "contracts/6/protocol/workers/tomb/TombWorker03.sol:70"
          },
          {
            "contract": "TombWorker03",
            "label": "lpToken",
            "type": "t_contract(ISwapPairLike)31116",
            "src": "contracts/6/protocol/workers/tomb/TombWorker03.sol:72"
          },
          {
            "contract": "TombWorker03",
            "label": "wNative",
            "type": "t_address",
            "src": "contracts/6/protocol/workers/tomb/TombWorker03.sol:73"
          },
          {
            "contract": "TombWorker03",
            "label": "baseToken",
            "type": "t_address",
            "src": "contracts/6/protocol/workers/tomb/TombWorker03.sol:73"
          },
          {
            "contract": "TombWorker03",
            "label": "farmingToken",
            "type": "t_address",
            "src": "contracts/6/protocol/workers/tomb/TombWorker03.sol:75"
          },
          {
            "contract": "TombWorker03",
            "label": "tshare",
            "type": "t_address",
            "src": "contracts/6/protocol/workers/tomb/TombWorker03.sol:76"
          },
          {
            "contract": "TombWorker03",
            "label": "operator",
            "type": "t_address",
            "src": "contracts/6/protocol/workers/tomb/TombWorker03.sol:78"
          },
          {
            "contract": "TombWorker03",
            "label": "pid",
            "type": "t_uint256",
            "src": "contracts/6/protocol/workers/tomb/TombWorker03.sol:79"
          },
          {
            "contract": "TombWorker03",
            "label": "shares",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/6/protocol/workers/tomb/TombWorker03.sol:81"
          },
          {
            "contract": "TombWorker03",
            "label": "okStrats",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/6/protocol/workers/tomb/TombWorker03.sol:82"
          },
          {
            "contract": "TombWorker03",
            "label": "totalShare",
            "type": "t_uint256",
            "src": "contracts/6/protocol/workers/tomb/TombWorker03.sol:84"
          },
          {
            "contract": "TombWorker03",
            "label": "addStrat",
            "type": "t_contract(IStrategy)30632",
            "src": "contracts/6/protocol/workers/tomb/TombWorker03.sol:85"
          },
          {
            "contract": "TombWorker03",
            "label": "liqStrat",
            "type": "t_contract(IStrategy)30632",
            "src": "contracts/6/protocol/workers/tomb/TombWorker03.sol:86"
          },
          {
            "contract": "TombWorker03",
            "label": "reinvestBountyBps",
            "type": "t_uint256",
            "src": "contracts/6/protocol/workers/tomb/TombWorker03.sol:86"
          },
          {
            "contract": "TombWorker03",
            "label": "maxReinvestBountyBps",
            "type": "t_uint256",
            "src": "contracts/6/protocol/workers/tomb/TombWorker03.sol:87"
          },
          {
            "contract": "TombWorker03",
            "label": "okReinvestors",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/6/protocol/workers/tomb/TombWorker03.sol:89"
          },
          {
            "contract": "TombWorker03",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/6/protocol/workers/tomb/TombWorker03.sol:91"
          },
          {
            "contract": "TombWorker03",
            "label": "feeDenom",
            "type": "t_uint256",
            "src": "contracts/6/protocol/workers/tomb/TombWorker03.sol:92"
          },
          {
            "contract": "TombWorker03",
            "label": "reinvestThreshold",
            "type": "t_uint256",
            "src": "contracts/6/protocol/workers/tomb/TombWorker03.sol:93"
          },
          {
            "contract": "TombWorker03",
            "label": "reinvestPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/6/protocol/workers/tomb/TombWorker03.sol:94"
          },
          {
            "contract": "TombWorker03",
            "label": "treasuryAccount",
            "type": "t_address",
            "src": "contracts/6/protocol/workers/tomb/TombWorker03.sol:95"
          },
          {
            "contract": "TombWorker03",
            "label": "treasuryBountyBps",
            "type": "t_uint256",
            "src": "contracts/6/protocol/workers/tomb/TombWorker03.sol:96"
          },
          {
            "contract": "TombWorker03",
            "label": "beneficialVault",
            "type": "t_contract(IVault)31602",
            "src": "contracts/6/protocol/workers/tomb/TombWorker03.sol:96"
          },
          {
            "contract": "TombWorker03",
            "label": "beneficialVaultBountyBps",
            "type": "t_uint256",
            "src": "contracts/6/protocol/workers/tomb/TombWorker03.sol:97"
          },
          {
            "contract": "TombWorker03",
            "label": "rewardPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/6/protocol/workers/tomb/TombWorker03.sol:100"
          },
          {
            "contract": "TombWorker03",
            "label": "buybackAmount",
            "type": "t_uint256",
            "src": "contracts/6/protocol/workers/tomb/TombWorker03.sol:101"
          }
        ],
        "types": {
          "t_contract(ITShareRewardPool)31567": {
            "label": "contract ITShareRewardPool"
          },
          "t_contract(ISwapFactoryLike)30874": {
            "label": "contract ISwapFactoryLike"
          },
          "t_contract(ISwapRouter02Like)31512": {
            "label": "contract ISwapRouter02Like"
          },
          "t_contract(ISwapPairLike)31116": {
            "label": "contract ISwapPairLike"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IStrategy)30632": {
            "label": "contract IStrategy"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IVault)31602": {
            "label": "contract IVault"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
