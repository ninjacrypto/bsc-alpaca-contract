{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xA625AB01B08ce023B2a342Dbb12a16f2C8489A8F",
    "txHash": "0xc47ba2e2b657586c52cb2a8099a24460c36de87b752ce6f5b1f5550ce1a93599",
    "deployTransaction": {
      "hash": "0xc47ba2e2b657586c52cb2a8099a24460c36de87b752ce6f5b1f5550ce1a93599",
      "type": 0,
      "accessList": null,
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0xC44f82b07Ab3E691F826951a6E335E1bC1bB0B51",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x54e0193040"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x075da0"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 2,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x470ae3f883de012801dee2ca76ea5814c7e5e6ea3690430fd4bc922d93752fe1",
      "s": "0x6608229fa47b3655d5fc01c6f0021514027e69570ec2262f1a3c6d15b99c3511",
      "v": 535,
      "creates": "0xA625AB01B08ce023B2a342Dbb12a16f2C8489A8F",
      "chainId": 250
    }
  },
  "proxies": [
    {
      "address": "0xCab46f1397fdf4b0F31CEF05345141E51F877EdB",
      "txHash": "0xee8272c05761be8b5da09fc95aa28ddb11bbdb907dadca573f52646b0f4c7128",
      "kind": "transparent"
    },
    {
      "address": "0x5379F32C8D5F663EACb61eeF63F722950294f452",
      "txHash": "0x580f1eafe4418ea14c68bdbf4f5bd1f81644d93a4c2332fc4fd1923f5086c78f",
      "kind": "transparent"
    },
    {
      "address": "0x97116a0f3ee811Bc6d7003Ad10980DD77FB1B50e",
      "txHash": "0x0af0e3c78570adc096816ae871872af475ec188292d3ba062252b8795ff6e0ab",
      "kind": "transparent"
    },
    {
      "address": "0x3Af78AeB766059e2dB89654ed438a8d976CD2dc5",
      "txHash": "0x55db893606c114080d1421d77d2ac0dbb8764561df99d70952e49987ce5c61b7",
      "kind": "transparent"
    },
    {
      "address": "0xca1Cf7C64481B8C095828d380922505E5942C60D",
      "txHash": "0x16e6074286853865b7459f0992f45480b45cf7f040f72a1bf2c3364c76ef3524",
      "kind": "transparent"
    },
    {
      "address": "0xE1D2CA01bc88F325fF7266DD2165944f3CAf0D3D",
      "txHash": "0x87447cf54588db76d3f4ab5b635c966cbe57e117ef40d6d868aa34b82a62a665",
      "kind": "transparent"
    },
    {
      "address": "0xD50aAb6B210fe049B6c5262f5A7676204699AB8E",
      "txHash": "0x0ae8a20ed0f2598713e331840d51208aaa6db4573b6c36906957d774c289a6d2",
      "kind": "transparent"
    },
    {
      "address": "0x65Cc57347bA3761358Eb175540E9e5D39CbceFd8",
      "txHash": "0x34f25d19445373b2521cefe0a40aeb76fe3cc74f2e6e2ecdd250a5e24def3f3c",
      "kind": "transparent"
    },
    {
      "address": "0x07DE1F788Fa7E0C215AA772d4429f47902640ef5",
      "txHash": "0x2f0e88e72918452d51f16b1a681a5fe80949647dd08c88e60c85ec35c800caf6",
      "kind": "transparent"
    },
    {
      "address": "0x311a522e43C035244e72247895F5C17e46CAB000",
      "txHash": "0x9f7d689a0b4af16becbc60027b029e90d43dd3577342a3e5605f8170bb81796c",
      "kind": "transparent"
    },
    {
      "address": "0x540247c00645E85fA548064039493beD4a0c522C",
      "txHash": "0x93ac580fe39f20e5037b630533d4145863a71f3192c236ef5c7e4fbb59376c34",
      "kind": "transparent"
    },
    {
      "address": "0xcE15B0B5B0b150a8364723bE03906a4029104e48",
      "txHash": "0xf824aa7621d271823fcf890e831201d5fa7c44073a5f98483b563807867e6ab8",
      "kind": "transparent"
    },
    {
      "address": "0xc6829dC7Ee6Bd368F917A0EB53FC791790Ba028A",
      "txHash": "0x202af18a4ba06c01ec2d5a88292aa52dd9531365ae1bcb182d75402bfaacc89d",
      "kind": "transparent"
    },
    {
      "address": "0x39CCA7167d8A9FEEB610371d37785Ca78d5e7813",
      "txHash": "0x46950d69409035614127966fd0bcc377e412e71a536bc055a29e48528abfa91b",
      "kind": "transparent"
    },
    {
      "address": "0x291E6fd58bf69b4a0E69405cB093FC2D9ff8D747",
      "txHash": "0x68658740cc17642a53d35f22772fe68e5eb737daf70a9334c413a3be4be4816f",
      "kind": "transparent"
    },
    {
      "address": "0x7F9B660Ef1731BCeE9233Ec4aAdE5631D06DAbd8",
      "txHash": "0x5559a43f8ec025a167335040a0c224d9ed0b3e16bb0d18e8ff9fda7aa1e37616",
      "kind": "transparent"
    },
    {
      "address": "0x1Ee2521224288152614aEEDc50773A979e849f8e",
      "txHash": "0xb80f3bec881d5de0db3a60e45d3f182b433d1f81b86eb978b1ed73d7d01766e3",
      "kind": "transparent"
    },
    {
      "address": "0x90AA2A43743347bDeED0a31B00B6d90400a19270",
      "txHash": "0x11ab199929e8a9867833ca69cd0510ec5bdc1cb0744ddaea3c82f508d5ba076a",
      "kind": "transparent"
    },
    {
      "address": "0x040f79A294188eFd5D687e48C7146CF5564a3Bf1",
      "txHash": "0x1ad0904fc598053cd39e316afa9f9638b18d57d6718e06994737021e1338a7f4",
      "kind": "transparent"
    },
    {
      "address": "0xe97028Cd0b45B33c004419C69Ca8728712D9980B",
      "txHash": "0x9c0e9431c0ae794c8bdc94a42176dffd97de46b3eee87594822ff0e666cfc0b7",
      "kind": "transparent"
    },
    {
      "address": "0xE1749f57881B68fDa9Be56a8d100f58be1fD174d",
      "txHash": "0xa324b7ec2f4cca647658067e08bbadb9b7a65bc13a2e9ca6793198644cc393e2",
      "kind": "transparent"
    }
  ],
  "impls": {
    "b23cec53865cece70783e1c82f0bdec4088d0a7f10f4c02cb16e62d178d54d60": {
      "address": "0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F",
      "txHash": "0xdfde884addaacc2f7a4c71d01f1642d6bc089fa65d316a6052d0e1eaa658c7f9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "SimplePriceOracle",
            "label": "feeder",
            "type": "t_address",
            "src": "contracts/6/protocol/price-oracle/SimplePriceOracle.sol:28"
          },
          {
            "contract": "SimplePriceOracle",
            "label": "store",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(PriceData)33876_storage))",
            "src": "contracts/6/protocol/price-oracle/SimplePriceOracle.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(PriceData)33876_storage))": {
            "label": "mapping(address => mapping(address => struct SimplePriceOracle.PriceData))"
          },
          "t_mapping(t_address,t_struct(PriceData)33876_storage)": {
            "label": "mapping(address => struct SimplePriceOracle.PriceData)"
          },
          "t_struct(PriceData)33876_storage": {
            "label": "struct SimplePriceOracle.PriceData",
            "members": [
              {
                "label": "price",
                "type": "t_uint192"
              },
              {
                "label": "lastUpdate",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint192": {
            "label": "uint192"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7e3bb24126c1ed5dfb12be3c890b52b8cab0ca0879abedcad9da26066f8af8a6": {
      "address": "0x13C052C34BeAEd5f7C4856fAA4Da0544B9Df99a7",
      "txHash": "0x51457d53984f0ff86d7b340a22741b562be59dafd94d674ea0f6888fdac8a365",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ChainLinkPriceOracle",
            "label": "priceFeeds",
            "type": "t_mapping(t_address,t_mapping(t_address,t_contract(AggregatorV3Interface)45))",
            "src": "contracts/6/protocol/price-oracle/ChainLinkPriceOracle.sol:27"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_address,t_contract(AggregatorV3Interface)45))": {
            "label": "mapping(address => mapping(address => contract AggregatorV3Interface))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_contract(AggregatorV3Interface)45)": {
            "label": "mapping(address => contract AggregatorV3Interface)"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3fe77852d4fa3d86e8bfc4115a60318eab658f28688d744b9394eb12acd696a5": {
      "address": "0xe2880836faf7FaDF094418F9E9DdDe3d132243F1",
      "txHash": "0x3529ad38e103e641ce526adf08874de37d5d637195f037beca64efd98cc7bf06",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "WorkerConfig",
            "label": "oracle",
            "type": "t_contract(PriceOracle)30871",
            "src": "contracts/6/protocol/workers/WorkerConfig.sol:52"
          },
          {
            "contract": "WorkerConfig",
            "label": "workers",
            "type": "t_mapping(t_address,t_struct(Config)50424_storage)",
            "src": "contracts/6/protocol/workers/WorkerConfig.sol:54"
          },
          {
            "contract": "WorkerConfig",
            "label": "governor",
            "type": "t_address",
            "src": "contracts/6/protocol/workers/WorkerConfig.sol:55"
          }
        ],
        "types": {
          "t_contract(PriceOracle)30871": {
            "label": "contract PriceOracle"
          },
          "t_mapping(t_address,t_struct(Config)50424_storage)": {
            "label": "mapping(address => struct WorkerConfig.Config)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Config)50424_storage": {
            "label": "struct WorkerConfig.Config",
            "members": [
              {
                "label": "acceptDebt",
                "type": "t_bool"
              },
              {
                "label": "workFactor",
                "type": "t_uint64"
              },
              {
                "label": "killFactor",
                "type": "t_uint64"
              },
              {
                "label": "maxPriceDiff",
                "type": "t_uint64"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "038b2b61a8caadf8a0483612000bfd4c979e6103f4abdf93218bfaecc5ba59ee": {
      "address": "0x607Ed45D4837e93158CD39aAfd292340Ed5F5D9F",
      "txHash": "0x1db8bea09c90e18557d886a4f5d30c51fdc8ffdc381d8a0f0283475678d364cf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "OracleMedianizer",
            "label": "primarySourceCount",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/6/protocol/OracleMedianizer.sol:26"
          },
          {
            "contract": "OracleMedianizer",
            "label": "primarySources",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_contract(PriceOracle)30871)))",
            "src": "contracts/6/protocol/OracleMedianizer.sol:28"
          },
          {
            "contract": "OracleMedianizer",
            "label": "maxPriceDeviations",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/6/protocol/OracleMedianizer.sol:30"
          },
          {
            "contract": "OracleMedianizer",
            "label": "maxPriceStales",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/6/protocol/OracleMedianizer.sol:32"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_contract(PriceOracle)30871)))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => contract PriceOracle)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_contract(PriceOracle)30871))": {
            "label": "mapping(address => mapping(uint256 => contract PriceOracle))"
          },
          "t_mapping(t_uint256,t_contract(PriceOracle)30871)": {
            "label": "mapping(uint256 => contract PriceOracle)"
          },
          "t_contract(PriceOracle)30871": {
            "label": "contract PriceOracle"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8a48db86fea7efc45ca6a9d10edbd485c2ebd5a7a1fdf21f51757c1204889028": {
      "address": "0x5138133f0671071D8b8F1C4c180881bfCfe22CeC",
      "txHash": "0x5b8d983253e897c669a1caa5d72833b3d3554f4f8038b3a4f55512662b01da1c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "SpookySwapStrategyAddBaseTokenOnly",
            "label": "factory",
            "type": "t_contract(ISwapFactoryLike)31179",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyAddBaseTokenOnly.sol:38"
          },
          {
            "contract": "SpookySwapStrategyAddBaseTokenOnly",
            "label": "router",
            "type": "t_contract(ISwapRouter02Like)31817",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyAddBaseTokenOnly.sol:38"
          },
          {
            "contract": "SpookySwapStrategyAddBaseTokenOnly",
            "label": "okWorkers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyAddBaseTokenOnly.sol:40"
          }
        ],
        "types": {
          "t_contract(ISwapFactoryLike)31179": {
            "label": "contract ISwapFactoryLike"
          },
          "t_contract(ISwapRouter02Like)31817": {
            "label": "contract ISwapRouter02Like"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e486fc1f47df6355b3bf89c26a7fb9148a0d66ff92993fdf3503fb5ced970f95": {
      "address": "0xd7D069493685A581d27824Fc46EdA46B7EfC0063",
      "txHash": "0x48b6da4f6121a1ec01bc034204b2712eb29f9e6aac67b06ddc0146ceb2b393bc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "SpookySwapStrategyLiquidate",
            "label": "factory",
            "type": "t_contract(ISwapFactoryLike)31179",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyLiquidate.sol:39"
          },
          {
            "contract": "SpookySwapStrategyLiquidate",
            "label": "router",
            "type": "t_contract(ISwapRouter02Like)31817",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyLiquidate.sol:39"
          },
          {
            "contract": "SpookySwapStrategyLiquidate",
            "label": "okWorkers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyLiquidate.sol:41"
          }
        ],
        "types": {
          "t_contract(ISwapFactoryLike)31179": {
            "label": "contract ISwapFactoryLike"
          },
          "t_contract(ISwapRouter02Like)31817": {
            "label": "contract ISwapRouter02Like"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e48ad6f5a518a86fc62041516c220969be8dc9c432e9127edb5647176338519e": {
      "address": "0xB318358E68cC071fF10Ff7550604fd0a09D54C12",
      "txHash": "0x526e5ac579b3aafb96491df9226e6e233d24eb4430235fa2ccb9f9893652209e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "SpookySwapStrategyWithdrawMinimizeTrading",
            "label": "factory",
            "type": "t_contract(ISwapFactoryLike)31179",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyWithdrawMinimizeTrading.sol:39"
          },
          {
            "contract": "SpookySwapStrategyWithdrawMinimizeTrading",
            "label": "router",
            "type": "t_contract(ISwapRouter02Like)31817",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyWithdrawMinimizeTrading.sol:40"
          },
          {
            "contract": "SpookySwapStrategyWithdrawMinimizeTrading",
            "label": "wftm",
            "type": "t_address",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyWithdrawMinimizeTrading.sol:42"
          },
          {
            "contract": "SpookySwapStrategyWithdrawMinimizeTrading",
            "label": "wNativeRelayer",
            "type": "t_contract(IWNativeRelayer)32047",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyWithdrawMinimizeTrading.sol:42"
          },
          {
            "contract": "SpookySwapStrategyWithdrawMinimizeTrading",
            "label": "okWorkers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyWithdrawMinimizeTrading.sol:44"
          }
        ],
        "types": {
          "t_contract(ISwapFactoryLike)31179": {
            "label": "contract ISwapFactoryLike"
          },
          "t_contract(ISwapRouter02Like)31817": {
            "label": "contract ISwapRouter02Like"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IWNativeRelayer)32047": {
            "label": "contract IWNativeRelayer"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "23cf038c165bacabfd5483c7127cbf449682e71ee2079a05190978e8fc4e3bab": {
      "address": "0xEDd2b93063E79604dD2C306e0A59dDA15697C4e8",
      "txHash": "0x3cd487fa6855685646c6d6c8cf86f8d19ef0337a09f324c38d274cd932c8804c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "SpookySwapStrategyPartialCloseLiquidate",
            "label": "factory",
            "type": "t_contract(ISwapFactoryLike)31179",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyPartialCloseLiquidate.sol:38"
          },
          {
            "contract": "SpookySwapStrategyPartialCloseLiquidate",
            "label": "router",
            "type": "t_contract(ISwapRouter02Like)31817",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyPartialCloseLiquidate.sol:38"
          },
          {
            "contract": "SpookySwapStrategyPartialCloseLiquidate",
            "label": "okWorkers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyPartialCloseLiquidate.sol:40"
          }
        ],
        "types": {
          "t_contract(ISwapFactoryLike)31179": {
            "label": "contract ISwapFactoryLike"
          },
          "t_contract(ISwapRouter02Like)31817": {
            "label": "contract ISwapRouter02Like"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e845fcb607631fc8efda1a20e035ff738f694127ed5dbece9229ae5a53af9630": {
      "address": "0xd7b805E88c5F52EDE71a9b93F7048c8d632DBEd4",
      "txHash": "0x69e76ad4e098c334ce57b9f15919efaace9bbd90806773e77d171a627f1427e7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "SpookySwapStrategyPartialCloseMinimizeTrading",
            "label": "factory",
            "type": "t_contract(ISwapFactoryLike)31179",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyPartialCloseMinimizeTrading.sol:39"
          },
          {
            "contract": "SpookySwapStrategyPartialCloseMinimizeTrading",
            "label": "router",
            "type": "t_contract(ISwapRouter02Like)31817",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyPartialCloseMinimizeTrading.sol:40"
          },
          {
            "contract": "SpookySwapStrategyPartialCloseMinimizeTrading",
            "label": "wftm",
            "type": "t_address",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyPartialCloseMinimizeTrading.sol:42"
          },
          {
            "contract": "SpookySwapStrategyPartialCloseMinimizeTrading",
            "label": "wNativeRelayer",
            "type": "t_contract(IWNativeRelayer)32047",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyPartialCloseMinimizeTrading.sol:42"
          },
          {
            "contract": "SpookySwapStrategyPartialCloseMinimizeTrading",
            "label": "okWorkers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyPartialCloseMinimizeTrading.sol:44"
          }
        ],
        "types": {
          "t_contract(ISwapFactoryLike)31179": {
            "label": "contract ISwapFactoryLike"
          },
          "t_contract(ISwapRouter02Like)31817": {
            "label": "contract ISwapRouter02Like"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IWNativeRelayer)32047": {
            "label": "contract IWNativeRelayer"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2c188036de46f26a97a502a0ce7172ad2364b69bb675622cc883325b87eb46e2": {
      "address": "0x7C9e73d4C71dae564d41F78d56439bB4ba87592f",
      "txHash": "0xd14c2fcb3e5cf8f19a1fd27252c78506edf6b16dfd76d359566ad586df40dff4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "MiniFL",
            "label": "ALPACA",
            "type": "t_contract(IERC20Upgradeable)306",
            "src": "contracts/8.11/MiniFL/MiniFL.sol:49"
          },
          {
            "contract": "MiniFL",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)1258_storage)dyn_storage",
            "src": "contracts/8.11/MiniFL/MiniFL.sol:49"
          },
          {
            "contract": "MiniFL",
            "label": "stakingToken",
            "type": "t_array(t_contract(IERC20Upgradeable)306)dyn_storage",
            "src": "contracts/8.11/MiniFL/MiniFL.sol:50"
          },
          {
            "contract": "MiniFL",
            "label": "rewarder",
            "type": "t_array(t_contract(IRewarder)2561)dyn_storage",
            "src": "contracts/8.11/MiniFL/MiniFL.sol:51"
          },
          {
            "contract": "MiniFL",
            "label": "isStakingToken",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/8.11/MiniFL/MiniFL.sol:52"
          },
          {
            "contract": "MiniFL",
            "label": "stakeDebtTokenAllowance",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/8.11/MiniFL/MiniFL.sol:52"
          },
          {
            "contract": "MiniFL",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1249_storage))",
            "src": "contracts/8.11/MiniFL/MiniFL.sol:56"
          },
          {
            "contract": "MiniFL",
            "label": "totalAllocPoint",
            "type": "t_uint256",
            "src": "contracts/8.11/MiniFL/MiniFL.sol:58"
          },
          {
            "contract": "MiniFL",
            "label": "alpacaPerSecond",
            "type": "t_uint256",
            "src": "contracts/8.11/MiniFL/MiniFL.sol:58"
          },
          {
            "contract": "MiniFL",
            "label": "maxAlpacaPerSecond",
            "type": "t_uint256",
            "src": "contracts/8.11/MiniFL/MiniFL.sol:61"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)306": {
            "label": "contract IERC20Upgradeable"
          },
          "t_array(t_struct(PoolInfo)1258_storage)dyn_storage": {
            "label": "struct MiniFL.PoolInfo[]"
          },
          "t_struct(PoolInfo)1258_storage": {
            "label": "struct MiniFL.PoolInfo",
            "members": [
              {
                "label": "accAlpacaPerShare",
                "type": "t_uint128"
              },
              {
                "label": "lastRewardTime",
                "type": "t_uint64"
              },
              {
                "label": "allocPoint",
                "type": "t_uint64"
              },
              {
                "label": "isDebtTokenPool",
                "type": "t_bool"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_contract(IERC20Upgradeable)306)dyn_storage": {
            "label": "contract IERC20Upgradeable[]"
          },
          "t_array(t_contract(IRewarder)2561)dyn_storage": {
            "label": "contract IRewarder[]"
          },
          "t_contract(IRewarder)2561": {
            "label": "contract IRewarder"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1249_storage))": {
            "label": "mapping(uint256 => mapping(address => struct MiniFL.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)1249_storage)": {
            "label": "mapping(address => struct MiniFL.UserInfo)"
          },
          "t_struct(UserInfo)1249_storage": {
            "label": "struct MiniFL.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_int256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f087524c9a018de3306fee2c26aeaad0b19c94dc42e1aa74d4acb76eb9f974cf": {
      "address": "0x80F24DD6383E0C944a0F23d8DC18DB0Fa6f4b964",
      "txHash": "0x588a0428bff7db21bc6824b5bf6d358c374941f6749d3c3a18e36aa4b13238b9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "Rewarder1",
            "label": "rewardToken",
            "type": "t_contract(IERC20Upgradeable)306",
            "src": "contracts/8.11/MiniFL/rewarders/Rewarder1.sol:40"
          },
          {
            "contract": "Rewarder1",
            "label": "poolInfo",
            "type": "t_mapping(t_uint256,t_struct(PoolInfo)2613_storage)",
            "src": "contracts/8.11/MiniFL/rewarders/Rewarder1.sol:51"
          },
          {
            "contract": "Rewarder1",
            "label": "poolIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/8.11/MiniFL/rewarders/Rewarder1.sol:53"
          },
          {
            "contract": "Rewarder1",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)2606_storage))",
            "src": "contracts/8.11/MiniFL/rewarders/Rewarder1.sol:54"
          },
          {
            "contract": "Rewarder1",
            "label": "totalAllocPoint",
            "type": "t_uint256",
            "src": "contracts/8.11/MiniFL/rewarders/Rewarder1.sol:56"
          },
          {
            "contract": "Rewarder1",
            "label": "rewardPerSecond",
            "type": "t_uint256",
            "src": "contracts/8.11/MiniFL/rewarders/Rewarder1.sol:56"
          },
          {
            "contract": "Rewarder1",
            "label": "miniFL",
            "type": "t_address",
            "src": "contracts/8.11/MiniFL/rewarders/Rewarder1.sol:61"
          },
          {
            "contract": "Rewarder1",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts/8.11/MiniFL/rewarders/Rewarder1.sol:63"
          },
          {
            "contract": "Rewarder1",
            "label": "maxRewardPerSecond",
            "type": "t_uint256",
            "src": "contracts/8.11/MiniFL/rewarders/Rewarder1.sol:63"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)306": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_uint256,t_struct(PoolInfo)2613_storage)": {
            "label": "mapping(uint256 => struct Rewarder1.PoolInfo)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(PoolInfo)2613_storage": {
            "label": "struct Rewarder1.PoolInfo",
            "members": [
              {
                "label": "accRewardPerShare",
                "type": "t_uint128"
              },
              {
                "label": "lastRewardTime",
                "type": "t_uint64"
              },
              {
                "label": "allocPoint",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)2606_storage))": {
            "label": "mapping(uint256 => mapping(address => struct Rewarder1.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)2606_storage)": {
            "label": "mapping(address => struct Rewarder1.UserInfo)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UserInfo)2606_storage": {
            "label": "struct Rewarder1.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_int256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "88d9101882c2c79d37a5ea07ebaa823d0328ddafaefd920f306aef6bcc1482c7": {
      "address": "0x2431E2E84A4Fc15A2bAb3E1B97D8a9CC9cB848d7",
      "txHash": "0x75a40f5c46a1509fb4d70a9b2d57812c4b44d991d3a29fba096a666bcde89b40",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "minDebtSize",
            "type": "t_uint256",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:46"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "getReservePoolBps",
            "type": "t_uint256",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:48"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "getKillBps",
            "type": "t_uint256",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:50"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "workers",
            "type": "t_mapping(t_address,t_contract(IWorkerConfig)32352)",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:52"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "interestModel",
            "type": "t_contract(InterestModel)32365",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:54"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "getWrappedNativeAddr",
            "type": "t_address",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:56"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "getWNativeRelayer",
            "type": "t_address",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:58"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "getFairLaunchAddr",
            "type": "t_address",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:61"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "maxKillBps",
            "type": "t_uint256",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:63"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "whitelistedCallers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:64"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "getKillTreasuryBps",
            "type": "t_uint256",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:66"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "treasury",
            "type": "t_address",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:69"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "approvedAddStrategies",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:70"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "whitelistedLiquidators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:73"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_contract(IWorkerConfig)32352)": {
            "label": "mapping(address => contract IWorkerConfig)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IWorkerConfig)32352": {
            "label": "contract IWorkerConfig"
          },
          "t_contract(InterestModel)32365": {
            "label": "contract InterestModel"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5c9bc885c81d307817c13349e92180112226688296e909b8f712731f5d574e2a": {
      "address": "0x849B7840d9ec233573Bc03A04185b6275dA96E81",
      "txHash": "0xe50a0329dd3fd98cb124966233c8ee428761c4fd2d35d4406e87735576eb2803",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "DebtToken",
            "label": "timelock",
            "type": "t_address",
            "src": "contracts/6/protocol/DebtToken.sol:28"
          },
          {
            "contract": "DebtToken",
            "label": "okHolders",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/6/protocol/DebtToken.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "37d5545254a7ab729b54e2f28ce2b3e33dc77beb6399216ff4cbee2196448add": {
      "address": "0xc72EEBeFd7670DfEa108Dcf6e80616900CF3AeD6",
      "txHash": "0xe42dbdbae27b6c65abb1b3f26a4bd1d17a355fc53c0e0fa6f4a7d5d326f59360",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Vault",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:62"
          },
          {
            "contract": "Vault",
            "label": "POSITION_ID",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:64"
          },
          {
            "contract": "Vault",
            "label": "STRATEGY",
            "type": "t_address",
            "src": "contracts/6/protocol/Vault.sol:65"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_address",
            "src": "contracts/6/protocol/Vault.sol:73"
          },
          {
            "contract": "Vault",
            "label": "debtToken",
            "type": "t_address",
            "src": "contracts/6/protocol/Vault.sol:75"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IVaultConfig)31999",
            "src": "contracts/6/protocol/Vault.sol:80"
          },
          {
            "contract": "Vault",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)6521_storage)",
            "src": "contracts/6/protocol/Vault.sol:81"
          },
          {
            "contract": "Vault",
            "label": "nextPositionID",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:84"
          },
          {
            "contract": "Vault",
            "label": "fairLaunchPoolId",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:85"
          },
          {
            "contract": "Vault",
            "label": "vaultDebtShare",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:86"
          },
          {
            "contract": "Vault",
            "label": "vaultDebtVal",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:87"
          },
          {
            "contract": "Vault",
            "label": "lastAccrueTime",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:89"
          },
          {
            "contract": "Vault",
            "label": "reservePool",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:89"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVaultConfig)31999": {
            "label": "contract IVaultConfig"
          },
          "t_mapping(t_uint256,t_struct(Position)6521_storage)": {
            "label": "mapping(uint256 => struct Vault.Position)"
          },
          "t_struct(Position)6521_storage": {
            "label": "struct Vault.Position",
            "members": [
              {
                "label": "worker",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "debtShare",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fd58014e012a37f73c68389ba504c603171a80d748997c6846ae3cbaccaf0b13": {
      "address": "0xAFf8339daEcaFd5116cBe54d33C5aab123148C5B",
      "txHash": "0x4c1d2b811d6965b47cab7823dd1f4dbb2278ed958c8ee5a2b5e04dfecfc06a4a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "SpookySwapStrategyAddTwoSidesOptimal",
            "label": "factory",
            "type": "t_contract(ISwapFactoryLike)31179",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyAddTwoSidesOptimal.sol:40"
          },
          {
            "contract": "SpookySwapStrategyAddTwoSidesOptimal",
            "label": "router",
            "type": "t_contract(ISwapRouter02Like)31817",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyAddTwoSidesOptimal.sol:42"
          },
          {
            "contract": "SpookySwapStrategyAddTwoSidesOptimal",
            "label": "vault",
            "type": "t_contract(IVault)31852",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyAddTwoSidesOptimal.sol:44"
          },
          {
            "contract": "SpookySwapStrategyAddTwoSidesOptimal",
            "label": "okWorkers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyAddTwoSidesOptimal.sol:44"
          }
        ],
        "types": {
          "t_contract(ISwapFactoryLike)31179": {
            "label": "contract ISwapFactoryLike"
          },
          "t_contract(ISwapRouter02Like)31817": {
            "label": "contract ISwapRouter02Like"
          },
          "t_contract(IVault)31852": {
            "label": "contract IVault"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
